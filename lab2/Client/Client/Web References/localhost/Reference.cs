//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Этот исходный текст был создан автоматически: Microsoft.VSDesigner, версия: 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Client.localhost {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebServiceSoap", Namespace="http://tempuri.org/")]
    public partial class WebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback RubToGrivnaOperationCompleted;
        
        private System.Threading.SendOrPostCallback RubToDollarOperationCompleted;
        
        private System.Threading.SendOrPostCallback RubToEuroOperationCompleted;
        
        private System.Threading.SendOrPostCallback RubToLiraOperationCompleted;
        
        private System.Threading.SendOrPostCallback RubToBatOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebService() {
            this.Url = global::Client.Properties.Settings.Default.Client_localhost_WebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event RubToGrivnaCompletedEventHandler RubToGrivnaCompleted;
        
        /// <remarks/>
        public event RubToDollarCompletedEventHandler RubToDollarCompleted;
        
        /// <remarks/>
        public event RubToEuroCompletedEventHandler RubToEuroCompleted;
        
        /// <remarks/>
        public event RubToLiraCompletedEventHandler RubToLiraCompleted;
        
        /// <remarks/>
        public event RubToBatCompletedEventHandler RubToBatCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RubToGrivna", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double RubToGrivna(double Rub) {
            object[] results = this.Invoke("RubToGrivna", new object[] {
                        Rub});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void RubToGrivnaAsync(double Rub) {
            this.RubToGrivnaAsync(Rub, null);
        }
        
        /// <remarks/>
        public void RubToGrivnaAsync(double Rub, object userState) {
            if ((this.RubToGrivnaOperationCompleted == null)) {
                this.RubToGrivnaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRubToGrivnaOperationCompleted);
            }
            this.InvokeAsync("RubToGrivna", new object[] {
                        Rub}, this.RubToGrivnaOperationCompleted, userState);
        }
        
        private void OnRubToGrivnaOperationCompleted(object arg) {
            if ((this.RubToGrivnaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RubToGrivnaCompleted(this, new RubToGrivnaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RubToDollar", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double RubToDollar(double Rub) {
            object[] results = this.Invoke("RubToDollar", new object[] {
                        Rub});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void RubToDollarAsync(double Rub) {
            this.RubToDollarAsync(Rub, null);
        }
        
        /// <remarks/>
        public void RubToDollarAsync(double Rub, object userState) {
            if ((this.RubToDollarOperationCompleted == null)) {
                this.RubToDollarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRubToDollarOperationCompleted);
            }
            this.InvokeAsync("RubToDollar", new object[] {
                        Rub}, this.RubToDollarOperationCompleted, userState);
        }
        
        private void OnRubToDollarOperationCompleted(object arg) {
            if ((this.RubToDollarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RubToDollarCompleted(this, new RubToDollarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RubToEuro", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double RubToEuro(double Rub) {
            object[] results = this.Invoke("RubToEuro", new object[] {
                        Rub});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void RubToEuroAsync(double Rub) {
            this.RubToEuroAsync(Rub, null);
        }
        
        /// <remarks/>
        public void RubToEuroAsync(double Rub, object userState) {
            if ((this.RubToEuroOperationCompleted == null)) {
                this.RubToEuroOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRubToEuroOperationCompleted);
            }
            this.InvokeAsync("RubToEuro", new object[] {
                        Rub}, this.RubToEuroOperationCompleted, userState);
        }
        
        private void OnRubToEuroOperationCompleted(object arg) {
            if ((this.RubToEuroCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RubToEuroCompleted(this, new RubToEuroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RubToLira", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double RubToLira(double Rub) {
            object[] results = this.Invoke("RubToLira", new object[] {
                        Rub});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void RubToLiraAsync(double Rub) {
            this.RubToLiraAsync(Rub, null);
        }
        
        /// <remarks/>
        public void RubToLiraAsync(double Rub, object userState) {
            if ((this.RubToLiraOperationCompleted == null)) {
                this.RubToLiraOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRubToLiraOperationCompleted);
            }
            this.InvokeAsync("RubToLira", new object[] {
                        Rub}, this.RubToLiraOperationCompleted, userState);
        }
        
        private void OnRubToLiraOperationCompleted(object arg) {
            if ((this.RubToLiraCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RubToLiraCompleted(this, new RubToLiraCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RubToBat", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double RubToBat(double Rub) {
            object[] results = this.Invoke("RubToBat", new object[] {
                        Rub});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void RubToBatAsync(double Rub) {
            this.RubToBatAsync(Rub, null);
        }
        
        /// <remarks/>
        public void RubToBatAsync(double Rub, object userState) {
            if ((this.RubToBatOperationCompleted == null)) {
                this.RubToBatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRubToBatOperationCompleted);
            }
            this.InvokeAsync("RubToBat", new object[] {
                        Rub}, this.RubToBatOperationCompleted, userState);
        }
        
        private void OnRubToBatOperationCompleted(object arg) {
            if ((this.RubToBatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RubToBatCompleted(this, new RubToBatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }

		internal object RubToShekel(double temp)
		{
			throw new NotImplementedException();
		}
	}
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RubToGrivnaCompletedEventHandler(object sender, RubToGrivnaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RubToGrivnaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RubToGrivnaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RubToDollarCompletedEventHandler(object sender, RubToDollarCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RubToDollarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RubToDollarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RubToEuroCompletedEventHandler(object sender, RubToEuroCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RubToEuroCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RubToEuroCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RubToLiraCompletedEventHandler(object sender, RubToLiraCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RubToLiraCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RubToLiraCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RubToBatCompletedEventHandler(object sender, RubToBatCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RubToBatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RubToBatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591